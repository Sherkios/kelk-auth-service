services:
  auth:
    build: ./
    container_name: kelk_auth_container
    env_file:
      - .env
    ports:
      - "${AUTH_PORT:-5000}:${AUTH_FORWARD_PORT:-5000}"
    volumes:
      - ./:/app

    networks:
      - kelk_network

    deploy:
      resources:
        limits:
          memory: 512M

    command: >
      sh -c "if [ \"$NODE_ENV\" = 'production' ]; then npm run start; else npm run dev; fi"

  db:
    container_name: kelk_auth_db_container
    image: postgres:17-alpine
    env_file:
      - .env
    restart: always

    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"

    ports:
      - "${DB_PORT:-5432}:${DB_FORWARD_PORT:-5432}"

    volumes:
      - "./dbdata:/var/lib/postgresql/data"
      - "./src/db/init:/docker-entrypoint-initdb.d"

    networks:
      - kelk_network

  redis:
    container_name: kelk_auth_redis_container
    image: redis:7-alpine
    env_file:
      - .env
    restart: always

    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"

    ports:
      - "${REDIS_PORT:-6379}:${REDIS_FORWARD_PORT:-6379}"

    volumes:
      - ./redisdata:/data

    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M

    networks:
      - kelk_network

    command:
      [
        "redis-server",
        "--save",
        "60",
        "1",
        "--loglevel",
        "warning",
        "--requirepass",
        "${REDIS_PASSWORD}",
      ]

networks:
  kelk_network:
    driver: bridge
